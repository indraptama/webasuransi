{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n// usage:\n// imgFill(target, imgSrc)\n// require es6\n\n\nvar setCSS = function setCSS(element) {\n  var CSS = {\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\"\n  };\n  // create multiple CSS Property\n  for (var i in CSS) {\n    element.style[i] = CSS[i];\n  }\n};\n\nvar imgFill = function imgFill(target, srcClass) {\n  var imgConts = Array.from(document.querySelectorAll(target));\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = imgConts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var img = _step.value;\n\n\n      // define image source class\n      var imgSrc = img.querySelector(srcClass);\n\n      // Get image source url\n      var imgSrcURL = imgSrc.getAttribute('src');\n\n      // hide source images\n      imgSrc.style.display = 'none';\n      // Set Multiple CSS Property\n      img.style.backgroundImage = 'url(' + imgSrcURL + ')';\n      setCSS(img);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nimgFill('.img-fill', '.img-fill-src')\n"]}